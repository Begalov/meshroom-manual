CLI Parameters
==============

Default pipeline:
-----------------

`aliceVision_cameraInit`_ -> `aliceVision_featureExtraction`_ -> `aliceVision_imageMatching`_ -> `aliceVision_featureMatching`_ -> `aliceVision_incrementalSfM`_ -> `aliceVision_prepareDenseScene`_ -> `aliceVision_depthMapEstimation`_ -> `aliceVision_depthMapFiltering`_ -> `aliceVision_meshing`_ -> `aliceVision_depthMapFiltering`_ -> `aliceVision_texturing`_

aliceVision_cameraInit
======================

**Required parameters:**
------------------------

-i [ --input ] arg
------------------

A SfMData file 	(\*.sfm) [if specified,--imageFolder cannot be used].

--imageFolder arg
-----------------

Input images folder [if specified, --input cannot be used].

-s [ --sensorDatabase ] arg
---------------------------

Camera sensor width database path.

-o [ --output ] arg (=cameraInit.sfm)
-------------------------------------

Output file path for the new SfMData file

**Optional parameters:**
------------------------

--defaultFocalLengthPix arg (=-1)
---------------------------------

Focal length in pixels. (or '-1' to unset)

--defaultFieldOfView arg (=-1)
------------------------------

Empirical value for the field of view in degree. (or '-1' to unset)

--defaultIntrinsic arg
----------------------

Intrinsics Kmatrix "f;0;ppx;0;f;ppy;0;0;1".

--defaultCameraModel arg
------------------------

Camera model type (pinhole, radial1, radial3, brown, fisheye4, fisheye1).

--groupCameraFallback arg (=folder)
-----------------------------------

When there is no serial number in the image metadata, we cannot know if the images come from the same camera. This is problematic for grouping images sharing the same internal camera settings and we have to decide on a fallback strategy:

- global: all images may come from a single device (make/model/focal will still be a differentiator).

- folder: different folders will be considered as different devices

- image: consider that each image has different internal camera parameters

--allowSingleView arg (=0)
--------------------------

Allow the program to process a single view.

Warning: if a single view is process, the output file can't be use in many other programs.

**Log parameters:**
-------------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_cameraLocalization
==============================

.. note::

**This program takes as input a media (image, image sequence, video) and a database (vocabulary tree, 3D scene data)
and returns for each frame a pose estimation for the camera.**

**Required input parameters:**
------------------------------

--sfmdata arg
-------------

The sfm_data.json kind of file generated by AliceVision.

--mediafile arg
---------------

The folder path or the filename for the media to track

Options for the output of the localizer:
----------------------------------------

-h [ --help ]
-------------

--visualDebug arg
-----------------

If a folder is provided it enables visual debug and saves all the debugging info in that folder

--outputAlembic arg (=trackedcameras.abc)
-----------------------------------------

Filename for the SfMData export file (where camera poses will be stored).

Default : trackedcameras.abc.

--outputJSON arg
----------------

Filename for the localization results (raw data) as .json

**Common optional parameters for the localizer:**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--descriptorPath arg
--------------------

Folder containing the descriptors for all the images (ie the \*.desc.)

--matchDescTypes arg (=sift)
----------------------------

The describer types to use for the matching

--preset arg (=normal)
----------------------

Preset for the feature extractor when localizing a new image {LOW,MEDIUM,NORMAL,HIGH,ULTRA}

--resectionEstimator arg (=acransac)
------------------------------------

The type of \*sac framework to use for resection (acransac, loransac)

--matchingEstimator arg (=acransac)
-----------------------------------

The type of \*sac framework to use for matching (acransac, loransac)

--calibration arg
-----------------

Calibration file

--refineIntrinsics arg
----------------------

Enable/Disable camera intrinsics refinement for each localized image

--reprojectionError arg (=4)
----------------------------

Maximum reprojection error (in pixels) allowed for resectioning. If set to 0 it lets the ACRansac select an optimal value.

**Parameters specific for the vocabulary tree-based localizer:**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--nbImageMatch arg (=4)
-----------------------

[voctree] Number of images to retrieve in database

--maxResults arg (=10)
----------------------

[voctree] For algorithm AllResults, it stops the image matching when this number of matched images is reached. If 0 it is ignored.

--commonviews arg (=3)
----------------------

[voctree] Number of minimum images in which a point must be seen to be used in cluster tracking

--voctree arg
-------------

[voctree] Filename for the vocabulary tree

--voctreeWeights arg
--------------------

[voctree] Filename for the vocabulary tree weights

--algorithm arg (=AllResults)
-----------------------------

[voctree] Algorithm type: FirstBest, AllResults

--matchingError arg (=4)
------------------------

[voctree] Maximum matching error (in pixels) allowed for image matching with geometric verification. If set to 0 it lets the ACRansac select an optimal value.

--nbFrameBufferMatching arg (=10)
---------------------------------

[voctree] Number of previous frame of the sequence to use for matching (0 = Disable)

--robustMatching arg (=1)
-------------------------

[voctree] Enable/Disable the robust matching between query and database images, all putative matches will be considered.

**Parameters specific for final (optional) bundle adjustment optimization of the sequence:**
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

--globalBundle arg
------------------

[bundle adjustment] If --refineIntrinsics is not set, this option allows to run a final global bundle adjustment to refine the scene

--noDistortion arg
------------------

[bundle adjustment] It does not take into account distortion during the BA, it consider the distortion coefficients all equal to 0

--noBArefineIntrinsics arg
--------------------------

[bundle adjustment] It does not refine intrinsics during BA

--minPointVisibility arg (=0)
-----------------------------

[bundle adjustment] Minimum number of observation that a point must have in order to be considered for bundle adjustment

aliceVision_computeSfMColor
===========================

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file.

-o [ --output ] arg
-------------------

Output SfMData filename (.json, .bin, .xml, .ply, .baf, .abc).

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info) verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_ComputeStructureFromKnownPoses
==========================================

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file.

-o [ --output ] arg
-------------------
Output path for the features and descriptors files (\*.feat, \*.desc).

-f [ --featuresFolders ] arg
----------------------------

Path to folder(s) containing the extracted features.

Optional parameters:
--------------------

-d [ --describerTypes ] arg (=sift)
-----------------------------------

Describer types used to describe an image:

- sift: Scale-invariant feature transform.
- sift_float: SIFT stored as float.
- sift_upright: SIFT with upright feature.
- akaze: A-KAZE with floating point descriptors.
- akaze_liop: A-KAZE with Local Intensity Order Pattern descriptors.
- akaze_mldb: A-KAZE with Modified-Local Difference Binary descriptors.

-m [ --matchesFolders ] arg
---------------------------

Path to folder(s) in which computed matches are stored.

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_convertRAW
======================

Required parameters:
--------------------

-i [ --input ] arg
------------------

Input folder containing the sift in *float* format.

-o [ --output ] arg
-------------------

Output folder that stores the sift in *uchar* format.

Optional parameters:
--------------------

-s [ --sanityCheck ] arg (=0)
-----------------------------

Perform a sanity check to check that the conversion and the generated files are the same.

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_convertSfMFormat
============================

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file.

-o [ --output ] arg
-------------------

Path to the output Alembic file.

Optional parameters:
--------------------

-d [ --describerTypes ] arg (=sift)
-----------------------------------

Describer types used to describe an image:

- sift: Scale-invariant feature transform.
- sift_float: SIFT stored as float.
- sift_upright: SIFT with upright feature.
- akaze: A-KAZE with floating point descriptors.
- akaze_liop: A-KAZE with Local Intensity Order Pattern descriptors.
- akaze_mldb: A-KAZE with Modified-Local Difference Binary descriptors.

--imageWhiteList arg (=[])
--------------------------

image white list (uids or image paths).

--views arg (=1)
----------------

Export views.

--intrinsics arg (=1)
---------------------

Export intrinsics.

--extrinsics arg (=1)
---------------------

Export extrinsics.

--structure arg (=1)
--------------------

Export structure.

--observations arg (=1)
-----------------------

Export observations.

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).

aliceVision_depthMapEstimation
==============================

.. note::

**Estimate depth map for each input image.**

 Required parameters:
-i [ --input ] arg
------------------

SfMData file.

--imagesFolder arg
------------------

Images folder. Filename should be the image uid.

-o [ --output ] arg
-------------------

Output folder for generated depth maps.

Optional parameters:
--------------------

--rangeStart arg (=-1)
----------------------

Compute a sub-range of images from index rangeStart to rangeStart+rangeSize.

--rangeSize arg (=-1)
---------------------

Compute a sub-range of N images (N=rangeSize).

--downscale arg (=2)
--------------------

Image downscale factor.

--minViewAngle arg (=2)
-----------------------

minimum angle between two views.

--maxViewAngle arg (=70)
------------------------

maximum angle between two views.

--sgmMaxTCams arg (=10)
-----------------------

Semi Global Matching: Number of neighbour cameras.

--sgmWSH arg (=4)
-----------------

Semi Global Matching: Size of the patch used to compute the similarity.

--sgmGammaC arg (=5.5)
----------------------

Semi Global Matching: GammaC threshold.

--sgmGammaP arg (=8)
--------------------

Semi Global Matching: GammaP threshold.

--refineMaxTCams arg (=6)
-------------------------

Refine: Number of neighbour cameras.

--refineNSamplesHalf arg (=150)
-------------------------------

Refine: Number of samples.

--refineNDepthsToRefine arg (=31)
---------------------------------

Refine: Number of depths.

--refineNiters arg (=100)
-------------------------

Refine: Number of iterations.

--refineWSH arg (=3)
--------------------

Refine: Size of the patch used to compute the similarity.

--refineSigma arg (=15)
-----------------------

Refine: Sigma threshold.

--refineGammaC arg (=15.5)
--------------------------

Refine: GammaC threshold.

--refineGammaP arg (=8)
-----------------------

Refine: GammaP threshold.

--refineUseTcOrRcPixSize arg (=0)
---------------------------------

Refine: Use current camera pixel size or minimum pixel size of neighbour cameras.

--exportIntermediateResults arg (=0)
------------------------------------

Export intermediate results from the SGM and Refine steps.

--nbGPUs arg (=0)
-----------------

 Number of GPUs to use (0 means use all GPUs).

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).

aliceVision_depthMapFiltering
=============================

.. note::

**Filter depth map to remove values that are not consistent with other depth maps.**

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file.

--depthMapsFolder arg
---------------------

Input depth map folder.

-o [ --output ] arg
-------------------

Output folder for filtered depth maps.

Optional parameters:
--------------------

--rangeStart arg (=-1)
----------------------

Compute only a sub-range of images from index rangeStart to rangeStart+rangeSize.

--rangeSize arg (=-1)
---------------------

Compute only a sub-range of N images (N=rangeSize).

--minViewAngle arg (=2)
-----------------------

minimum angle between two views.

--maxViewAngle arg (=70)
------------------------

maximum angle between two views.

--minNumOfConsistentCams arg (=3)
---------------------------------

Minimal number of consistent cameras to consider the pixel.

--minNumOfConsistentCamsWithLowSimilarity arg (=4)
--------------------------------------------------

Minimal number of consistent cameras to consider the pixel when the similarity is weak or ambiguous.

--pixSizeBall arg (=0)
----------------------

Filter ball size (in px).

--pixSizeBallWithLowSimilarity arg (=0)
---------------------------------------

Filter ball size (in px) when the similarity is weak or ambiguous.

--nNearestCams arg (=10)
------------------------

Number of nearest cameras.

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).

aliceVision_exportAnimatedCamera
================================

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file containing a complete SfM.

-o [ --output ] arg
-------------------

Output folder.

Optional parameters:
--------------------

--exportUndistortedImages arg (=1)
----------------------------------

Export undistorted images for the animated camera(s). If false, animated camera(s) exported with original frame paths.

--viewFilter arg
----------------

Path to the output SfMData file (with only views and poses).

--undistortedImageType arg (=jpg)
---------------------------------

Image file type:
* .jpg
* .png
* .tif
* .exr (half)

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).

aliceVision_exportCameraFrustums
================================

.. note::

**Export camera frustrums as a triangle PLY file**

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file.

-o [ --output ] arg
-------------------

PLY file to store the camera frustums as triangle meshes.

Log parameters:
---------------

-v [ --verboseLevel ] arg (=info) verbosity level (fatal,  error, warning, info, debug, trace).

aliceVision_exportKeypoints
===========================

Required parameters:
--------------------

-i [ --input ] arg
------------------

 SfMData file.

-o [ --output ] arg
-------------------

Output path for keypoints.

-f [ --featuresFolders ] arg
----------------------------

Path to folder(s) containing the extracted features.

Optional parameters
-------------------

-d [ --describerTypes ] arg (=sift)
-----------------------------------

Describer types used to describe an image:

- sift: Scale-invariant feature transform.
- sift_float: SIFT stored as float.
- sift_upright: SIFT with upright feature.
- akaze: A-KAZE with floating point descriptors.
- akaze_liop: A-KAZE with Local Intensity Order Pattern descriptors.
- akaze_mldb: A-KAZE with Modified-Local Difference Binary descriptors.


Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_exportMatches
=========================

Required parameters:
--------------------

-i [ --input ] arg
------------------

SfMData file.

-o [ --output ] arg
-------------------

Output path for matches.

-f [ --featuresFolders ] arg
----------------------------

Path to folder(s) containing the extracted features.

-m [ --matchesFolders ] arg
---------------------------

Path to folder(s) in which computed matches are stored.

Optional parameters:
--------------------

-d [ --describerTypes ] arg (=sift)
-----------------------------------

Describer types used to describe an image:

- sift: Scale-invariant feature transform.
- sift_float: SIFT stored as float.
- sift_upright: SIFT with upright feature.
- akaze: A-KAZE with floating point descriptors.
- akaze_liop: A-KAZE with Local Intensity Order Pattern descriptors.
- akaze_mldb: A-KAZE with Modified-Local Difference Binary descriptors.


Log parameters:
---------------

-v [ --verboseLevel ] arg (=info)
---------------------------------

verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_exportMatlab
========================

Required parameters:
-i [ --input ] arg               SfMData file.
-o [ --output ] arg                Output folder.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_exportMeshlab
-------------------------

Required parameters:
-i [ --input ] arg                 SfMData file.
--ply arg                          Ply.
-o [ --output ] arg                Output folder.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_exportMeshroomMaya
------------------------------

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output folder.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_exportMVE2
----------------------

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output folder.
                                     Note:  this program writes output in MVE
                                     file format

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_exportMVSTexturing.exe
AliceVision exportMVSTexturing:

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output folder.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_exportPMVS
----------------------

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output path for keypoints.

Optional parameters:
--resolution arg (=1)              Divide image coefficient
--nbCore arg (=8)                  Nb core
--useVisData arg (=1)              Use visibility information.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_exportTracks
------------------------

Required parameters:
-i [ --input ] arg                   SfMData file.
-o [ --output ] arg                  Output path for tracks.
-f [ --featuresFolders ] arg         Path to folder(s) containing the
                                       extracted features.
-m [ --matchesFolders ] arg          Path to folder(s) in which computed
                                       matches are stored.

Optional parameters:
-d [ --describerTypes ] arg (=sift)  Describer types used to describe an
                                       image:
                                       * sift: Scale-invariant feature
                                       transform.
                                       * sift_float: SIFT stored as float.
                                       * sift_upright: SIFT with upright
                                       feature.
                                       * akaze: A-KAZE with floating point
                                       descriptors.
                                       * akaze_liop: A-KAZE with Local
                                       Intensity Order Pattern descriptors.
                                       * akaze_mldb: A-KAZE with Modified-Local
                                       Difference Binary descriptors.


Log parameters:
-v [ --verboseLevel ] arg (=info)    verbosity level (fatal,  error, warning,
                                       info, debug, trace).


aliceVision_featureExtraction
-----------------------------

Required parameters:
-i [ --input ] arg                    SfMData file.
-o [ --output ] arg                   Output path for the features and
                                        descriptors files (\*.feat, \*.desc).

Optional parameters:
-d [ --describerTypes ] arg (=sift)   Describer types used to describe an
                                        image:
                                        * sift: Scale-invariant feature
                                        transform.
                                        * sift_float: SIFT stored as float.
                                        * sift_upright: SIFT with upright
                                        feature.
                                        * akaze: A-KAZE with floating point
                                        descriptors.
                                        * akaze_liop: A-KAZE with Local
                                        Intensity Order Pattern descriptors.
                                        * akaze_mldb: A-KAZE with
                                        Modified-Local Difference Binary
                                        descriptors.

-p [ --describerPreset ] arg (=normal)
                                        Control the ImageDescriber
                                        configuration (low, medium, normal,
                                        high, ultra).
                                        Configuration 'ultra' can take long
                                        time !
--forceCpuExtraction arg (=0)         Use only CPU feature extraction
                                        methods.
--rangeStart arg (=-1)                Range image index start.
--rangeSize arg (=1)                  Range size.
--maxThreads arg (=0)                 Specifies the maximum number of threads
                                        to run simultaneously (0 for automatic
                                        mode).

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_featureMatching
---------------------------

.. note::

  Compute corresponding features between a series of views:
  - Load view images description (regions: features & descriptors)
  - Compute putative local feature matches (descriptors matching)
  - Compute geometric coherent feature matches (robust model estimation from putative matches)
  - Export computed data

Required parameters:
-i [ --input ] arg                    SfMData file.
-o [ --output ] arg                   Path to a folder in which computed
                                        matches will be stored.
-f [ --featuresFolders ] arg          Path to folder(s) containing the
                                        extracted features.

Optional parameters:
-g [ --geometricFilterType ] arg (=fundamental_matrix)
                                        Geometric filter type: Pairwise
                                        correspondences filtering thanks to
                                        robust model estimation:
                                        * no_filtering:         no geometric
                                        filtering
                                        * fundamental_matrix:   fundamental
                                        matrix
                                        * essential_matrix:     essential
                                        matrix
                                        * homography_matrix:    homography
                                        matrix
                                        * homography_growing:   multiple
                                        homography matrices [F.Srajer, 2016]

-d [ --describerTypes ] arg (=sift)   Describer types used to describe an
                                        image:
                                        * sift: Scale-invariant feature
                                        transform.
                                        * sift_float: SIFT stored as float.
                                        * sift_upright: SIFT with upright
                                        feature.
                                        * akaze: A-KAZE with floating point
                                        descriptors.
                                        * akaze_liop: A-KAZE with Local
                                        Intensity Order Pattern descriptors.
                                        * akaze_mldb: A-KAZE with
                                        Modified-Local Difference Binary
                                        descriptors.

-l [ --imagePairsList ] arg           Path to a file which contains the list
                                        of image pairs to match.
-p [ --photometricMatchingMethod ] arg (=ANN_L2)
                                        For Scalar based regions descriptor:
                                        * BRUTE_FORCE_L2: L2 BruteForce
                                        matching
                                        * ANN_L2: L2 Approximate Nearest
                                        Neighbor matching
                                        * CASCADE_HASHING_L2: L2 Cascade
                                        Hashing matching
                                        * FAST_CASCADE_HASHING_L2: L2 Cascade
                                        Hashing with precomputed hashed regions
                                        (faster than CASCADE_HASHING_L2 but use
                                        more memory)
                                        For Binary based descriptor:
                                        * BRUTE_FORCE_HAMMING: BruteForce
                                        Hamming matching
--geometricEstimator arg (=acransac)  Geometric estimator:
                                        * acransac: A-Contrario Ransac
                                        * loransac: LO-Ransac (only available
                                        for fundamental matrix). Need to set
                                        '--geometricError'
--geometricError arg (=0)             Maximum error (in pixels) allowed for
                                        features matching during geometric
                                        verification. If set to 0 it lets the
                                        ACRansac select an optimal value.
--savePutativeMatches arg (=0)        Save putative matches.
--guidedMatching arg (=0)             Use the found model to improve the
                                        pairwise correspondences.
--matchFilePerImage arg (=1)          Save matches in a separate file per
                                        image.
--distanceRatio arg (=0.800000012)    Distance ratio to discard non
                                        meaningful matches.
--maxIteration arg (=2048)            Maximum number of iterations allowed in
                                        ransac step.
--useGridSort arg (=1)                Use matching grid sort.
--exportDebugFiles arg (=0)           Export debug files (svg, dot).
--maxMatches arg (=0)                 Maximum number pf matches to keep.
--rangeStart arg (=-1)                Range image index start.
--rangeSize arg (=0)                  Range size.

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_globalSfM
---------------------

.. note::

  Implementation of the paper
  "Global Fusion of Relative Motions for Robust, Accurate and Scalable Structure from Motion."

  Pierre Moulon, Pascal Monasse and Renaud Marlet ICCV 2013.

Required parameters:
-i [ --input ] arg                    SfMData file.
-o [ --output ] arg                   Path of the output folder.
-f [ --featuresFolders ] arg          Path to folder(s) containing the
                                        extracted features.
-m [ --matchesFolders ] arg           Path to folder(s) in which computed
                                        matches are stored.

Optional parameters:
--outSfMDataFilename arg (=SfmData.json)
                                        Filename of the output SfMData file.
-d [ --describerTypes ] arg (=sift)   Describer types used to describe an
                                        image:
                                        * sift: Scale-invariant feature
                                        transform.
                                        * sift_float: SIFT stored as float.
                                        * sift_upright: SIFT with upright
                                        feature.
                                        * akaze: A-KAZE with floating point
                                        descriptors.
                                        * akaze_liop: A-KAZE with Local
                                        Intensity Order Pattern descriptors.
                                        * akaze_mldb: A-KAZE with
                                        Modified-Local Difference Binary
                                        descriptors.

--rotationAveraging arg (=2)          * 1: L1 minimization
                                        * 2: L2 minimization
--translationAveraging arg (=3)       * 1: L1 minimization
                                        * 2: L2 minimization of sum of squared
                                        Chordal distances
--lockAllIntrinsics arg (=0)          Force lock of all camera intrinsic
                                        parameters, so they will not be refined
                                        during Bundle Adjustment.

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_imageMatching
-------------------------

.. note::

 The objective of this software is to find images that are looking to the same areas of the scene. For that, we use the image retrieval techniques to find images that share content without the cost of resolving all feature matches in detail. The ambition is to simplify the image in a compact image descriptor which allows to compute the distance between all images descriptors efficiently.

 This program generates a pair list file to be passed to the aliceVision_featureMatching software. This file contains for each image the list of most similar images.

Required parameters:
-i [ --input ] arg                 SfMData file.
-f [ --featuresFolders ] arg       Path to folder(s) containing the extracted
                                     features.
-t [ --tree ] arg                  Input file path of the vocabulary tree.
                                     This file can be generated by
                                     createVoctree. This software is intended
                                     to be used with a generic, pre-trained
                                     vocabulary tree.
-o [ --output ] arg                Filepath to the output file with the list
                                     of selected image pairs.

Optional parameters:
--minNbImages arg (=200)           Minimal number of images to use the
                                     vocabulary tree. If we have less images
                                     than this threshold, we will compute all
                                     matching combinations.
--maxDescriptors arg (=500)        Limit the number of descriptors you load
                                     per image. Zero means no limit.
--nbMatches arg (=50)              The number of matches to retrieve for each
                                     image (If 0 it will retrieve all the
                                     matches).
-w [ --weights ] arg               Input name for the vocabulary tree weight
                                     file, if not provided all voctree leaves
                                     will have the same weight.

Multiple SfM:
--inputB arg                       SfMData file.
--matchingMode arg (=a/a)          The mode to combine image matching between
                                     the input SfMData A and B:
                                     * a/a+a/b : A with A + A with B
                                     * a/ab    : A with A and B
                                     * a/b     : A with B
                                     * a/a     : A with A
--outputCombinedSfM arg            Output file path for the combined SfMData
                                     file (if empty, don't combine).

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal, error, warning,
                                     info, debug, trace).


aliceVision_incrementalSfM
--------------------------

.. note::

  Sequential/Incremental reconstruction

  Perform incremental SfM (Initial Pair Essential + Resection)

Required parameters:
-i [ --input ] arg                    SfMData file.
-o [ --output ] arg                   Path to the output SfMData file.
-f [ --featuresFolders ] arg          Path to folder(s) containing the
                                        extracted features.
-m [ --matchesFolders ] arg           Path to folder(s) in which computed
                                        matches are stored.

Optional parameters:
--outputViewsAndPoses arg             Path to the output SfMData file (with
                                        only views and poses).
--extraInfoFolder arg                 Folder for intermediate reconstruction
                                        files and additional reconstruction
                                        information files.
-d [ --describerTypes ] arg (=sift)   Describer types used to describe an
                                        image:
                                        * sift: Scale-invariant feature
                                        transform.
                                        * sift_float: SIFT stored as float.
                                        * sift_upright: SIFT with upright
                                        feature.
                                        * akaze: A-KAZE with floating point
                                        descriptors.
                                        * akaze_liop: A-KAZE with Local
                                        Intensity Order Pattern descriptors.
                                        * akaze_mldb: A-KAZE with
                                        Modified-Local Difference Binary
                                        descriptors.

--interFileExtension arg (=.ply)      Extension of the intermediate file
                                        export.
--maxNumberOfMatches arg (=0)         Maximum number of matches per image
                                        pair (and per feature type). This can
                                        be useful to have a quick
                                        reconstruction overview. 0 means no
                                        limit.
--minInputTrackLength arg (=2)        Minimum track length in input of SfM.
--minAngleForTriangulation arg (=3)   Minimum angle for triangulation.
--minAngleForLandmark arg (=2)        Minimum angle for landmark.
--maxReprojectionError arg (=4)       Maximum reprojection error.
--minAngleInitialPair arg (=5)        Minimum angle for the initial pair.
--maxAngleInitialPair arg (=40)       Maximum angle for the initial pair.
--minNumberOfObservationsForTriangulation arg (=2)
                                        Minimum number of observations to
                                        triangulate a point.
                                        Set it to 3 (or more) reduces
                                        drastically the noise in the point
                                        cloud, but the number of final poses is
                                        a little bit reduced (from 1.5% to 11%
                                        on the tested datasets).
                                        Note: set it to 0 or 1 to use the old
                                        triangulation algorithm (using 2 views
                                        only) during resection.
--initialPairA arg                    UID or filepath or filename of the
                                        first image.
--initialPairB arg                    UID or filepath or filename of the
                                        second image.
--lockAllIntrinsics arg (=0)          Force lock of all camera intrinsic
                                        parameters, so they will not be refined
                                        during Bundle Adjustment.
-l [ --useLocalBA ] arg (=0)          Enable/Disable the Local bundle
                                        adjustment strategy.
                                        It reduces the reconstruction time,
                                        especially for big datasets (500+
                                        images).
--localBAGraphDistance arg (=1)       Graph-distance limit setting the Active
                                        region in the Local Bundle Adjustment
                                        strategy.
--localizerEstimator arg (=acransac)  Estimator type used to localize cameras
                                        (acransac (default), ransac, lsmeds,
                                        loransac, maxconsensus)
--localizerEstimatorError arg (=0)    Reprojection error threshold (in
                                        pixels) for the localizer estimator (0
                                        for default value according to the
                                        estimator).
--localizerEstimatorMaxIterations arg (=4096)
                                        Max number of RANSAC iterations.
--useOnlyMatchesFromInputFolder arg (=0)
                                        Use only matches from the input
                                        matchesFolder parameter.
                                        Matches folders previously added to the
                                        SfMData file will be ignored.
--useTrackFiltering arg (=1)          Enable/Disable the track filtering.

--useRigConstraint arg (=1)           Enable/Disable rig constraint.

--lockScenePreviouslyReconstructed arg (=1)
                                        Lock/Unlock scene previously
                                        reconstructed.


Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_meshDecimate
------------------------

Required parameters:
-i [ --input ] arg                 Input Mesh (OBJ file format).
-o [ --output ] arg                Output mesh (OBJ file format).

Optional parameters:
--simplificationFactor arg (=0)    Simplification factor.
--nbVertices arg (=0)              Fixed number of output vertices.
--minVertices arg (=0)             Min number of output vertices.
--maxVertices arg (=0)             Max number of output vertices.
--flipNormals arg (=0)             Option to flip face normals. It can be
                                     needed as it depends on the vertices order
                                     in triangles and the convention change
                                     from one software to another.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal, error, warning,
                                     info, debug, trace).


aliceVision_meshDenoising
-------------------------

Required parameters:
-i [ --input ] arg                    Input Mesh (OBJ file format).
-o [ --output ] arg                   Output mesh (OBJ file format).

Optional parameters:
--denoisingIterations arg (=5)        Number of denoising iterations.
--meshUpdateClosenessWeight arg (=0.00100000005)
                                        Closeness weight for mesh update, must
                                        be positive.
--lambda arg (=2)                     Regularization weight.
--eta arg (=1.5)                      Gaussian standard deviation for spatial
                                        weight, scaled by the average distance
                                        between adjacent face centroids. Must
                                        be positive.
--mu arg (=1.5)                       Gaussian standard deviation for
                                        guidance weight.
--nu arg (=0.300000012)               Gaussian standard deviation for signal
                                        weight.
--meshUpdateMethod arg (=0)           Mesh Update Method:
                                        * ITERATIVE_UPDATE(SDFilter::MeshFilter
                                        Parameters::ITERATIVE_UPDATE)
                                        (default): ShapeUp styled iterative
                                        solver
                                        * POISSON_UPDATE(SDFilter::MeshFilterPa
                                        rameters::POISSON_UPDATE):
                                        Poisson-based update from [Want et al.
                                        2015]


Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_meshFiltering
-------------------------

Required parameters:
-i [ --input ] arg                    Input Mesh (OBJ file format).
-o [ --output ] arg                   Output mesh (OBJ file format).

Optional parameters:
--keepLargestMeshOnly arg (=0)        Keep only the largest connected
                                        triangles group.
--removeLargeTrianglesFactor arg (=60)
                                        Remove all large triangles. We consider
                                        a triangle as large if one edge is
                                        bigger than N times the average edge
                                        length. Put zero to disable it.
--iterations arg (=10)                Number of smoothing iterations.
--lambda arg (=1)                     Smoothing size.

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_meshing
-------------------

Required parameters:
-i [ --input ] arg                    SfMData file.
-o [ --output ] arg                   Output mesh (OBJ file format).

Optional parameters:
--depthMapsFolder arg                 Input depth maps folder.
--depthMapsFilterFolder arg           Input filtered depth maps folder.
--maxInputPoints arg (=50000000)      Max input points loaded from images.
--maxPoints arg (=5000000)            Max points at the end of the depth maps
                                        fusion.
--maxPointsPerVoxel arg (=6000000)    Max points per voxel.
--minStep arg (=2)                    The step used to load depth values from
                                        depth maps is computed from
                                        maxInputPts. Here we define the minimal
                                        value for this step, so on small
                                        datasets we will not spend too much
                                        time at the beginning loading all depth
                                        values.
--simFactor arg (=15)                 simFactor
--angleFactor arg (=15)               angleFactor
--partitioning arg (=1)               Partitioning: 'singleBlock' or 'auto'.
--repartition arg (=1)                Repartition: 'multiResolution' or
                                        'regularGrid'.
--estimateSpaceFromSfM arg (=1)       Estimate the 3d space from the SfM.
--addLandmarksToTheDensePointCloud arg (=0)
                                        Add SfM Landmarks into the dense point
                                        cloud (created from depth maps). If
                                        only the SfM is provided in input, SfM
                                        landmarks will be used regardless of
                                        this option.

Advanced parameters:
--universePercentile arg (=0.999)     universe percentile
--estimateSpaceMinObservations arg (=3)
                                        Minimum number of observations for SfM
                                        space estimation.
--estimateSpaceMinObservationAngle arg (=10)
                                        Minimum angle between two observations
                                        for SfM space estimation.
--pixSizeMarginInitCoef arg (=2)      pixSizeMarginInitCoef
--pixSizeMarginFinalCoef arg (=1)     pixSizeMarginFinalCoef
--voteMarginFactor arg (=4)           voteMarginFactor
--contributeMarginFactor arg (=2)     contributeMarginFactor
--simGaussianSizeInit arg (=10)       simGaussianSizeInit
--simGaussianSize arg (=10)           simGaussianSize
--minAngleThreshold arg (=0.10000000000000001)
                                        minAngleThreshold
--refineFuse arg (=1)                 refineFuse

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_meshResampling
--------------------------

Required parameters:
-i [ --input ] arg                 Input Mesh (OBJ file format).
-o [ --output ] arg                Output mesh (OBJ file format).

Optional parameters:
--simplificationFactor arg (=0)    Simplification factor.
--nbVertices arg (=0)              Fixed number of output vertices.
--minVertices arg (=0)             Min number of output vertices.
--maxVertices arg (=0)             Max number of output vertices.
--nbLloydIter arg (=40)            Number of iterations for Lloyd
                                     pre-smoothing.
--flipNormals arg (=0)             Option to flip face normals. It can be
                                     needed as it depends on the vertices order
                                     in triangles and the convention change
                                     from one software to another.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal, error, warning,
                                     info, debug, trace).


aliceVision_prepareDenseScene
-----------------------------

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output folder.

Optional parameters:
--imagesFolders arg                Use images from specific folder(s) instead
                                     of those specify in the SfMData file.
                                     Filename should be the same or the image
                                     uid.
--outputFileType arg (=exr)        Image file type :
                                     * jpg
                                     * png
                                     * tif
                                     * exr (half)
--saveMetadata arg (=1)            Save projections and intrinsics
                                     information in images metadata.
--saveMatricesTxtFiles arg (=0)    Save projections and intrinsics
                                     information in text files.
--rangeStart arg (=-1)             Range image index start.
--rangeSize arg (=1)               Range size.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal, error, warning,
                                     info, debug, trace).


aliceVision_rigCalibration
--------------------------

.. note::

  This program is used to calibrate a camera rig composed of internally calibrated cameras.It takes as input a synchronized sequence of N cameras and it saves the estimated rig calibration to a text file:

Required input and output parameters:
--sfmdata arg                         The sfm_data.json kind of file
                                        generated by AliceVision.
--mediapath arg                       The path to the video file, the folder
                                        of the image sequence or a text file
                                        (one image path per line) for each
                                        camera of the rig (eg. --mediapath
                                        /path/to/cam1.mov /path/to/cam2.mov).
--cameraIntrinsics arg                The intrinsics calibration file for
                                        each camera of the rig. (eg.
                                        --cameraIntrinsics /path/to/calib1.txt
                                        /path/to/calib2.txt).
-o [ --outfile ] arg                  The name of the file where to store the
                                        calibration data

Options for the output of the localizer:
-h [ --help ]                         Print this message
-e [ --export ] arg (=trackedcameras.abc)
                                        Filename for the alembic file
                                        containing the rig poses with the 3D
                                        points. It also saves a file for each
                                        camera named 'filename.cam##.abc'.

Common optional parameters for the localizer:
--descriptorPath arg                  Folder containing the .desc.
--matchDescTypes arg (=sift)          The describer types to use for the
                                        matching
--preset arg (=normal)                Preset for the feature extractor when
                                        localizing a new image
                                        {LOW,MEDIUM,NORMAL,HIGH,ULTRA}
--resectionEstimator arg (=acransac)  The type of *sac framework to use for
                                        resection (acransac,loransac)
--matchingEstimator arg (=acransac)   The type of *sac framework to use for
                                        matching (acransac,loransac)
--refineIntrinsics arg                Enable/Disable camera intrinsics
                                        refinement for each localized image
--reprojectionError arg (=4)          Maximum reprojection error (in pixels)
                                        allowed for resectioning. If set to 0
                                        it lets the ACRansac select an optimal
                                        value.
--maxInputFrames arg (=0)             Maximum number of frames to read in
                                        input. 0 means no limit.

Parameters specific for the vocabulary tree-based localizer:
--voctree arg                         [voctree] Filename for the vocabulary
                                        tree
--voctreeWeights arg                  [voctree] Filename for the vocabulary
                                        tree weights
--algorithm arg (=AllResults)         [voctree] Algorithm type:
                                        {FirstBest,AllResults}
--nbImageMatch arg (=4)               [voctree] Number of images to retrieve
                                        in the database
--maxResults arg (=10)                [voctree] For algorithm AllResults, it
                                        stops the image matching when this
                                        number of matched images is reached. If
                                        0 it is ignored.
--matchingError arg (=4)              [voctree] Maximum matching error (in
                                        pixels) allowed for image matching with
                                        geometric verification. If set to 0 it
                                        lets the ACRansac select an optimal
                                        value.


aliceVision_rigLocalization
---------------------------

.. note::

  This program is used to localize a camera rig composed of internally calibrated cameras:

Required input parameters:
--sfmdata arg                         The sfm_data.json kind of file
                                        generated by AliceVision.
--mediapath arg                       The path to the video file, the folder
                                        of the image sequence or a text file
                                        (one image path per line) for each
                                        camera of the rig (eg. --mediapath
                                        /path/to/cam1.mov /path/to/cam2.mov).
--calibration arg                     The file containing the calibration
                                        data for the rig (subposes)
--cameraIntrinsics arg                The intrinsics calibration file for
                                        each camera of the rig. (eg.
                                        --cameraIntrinsics /path/to/calib1.txt
                                        /path/to/calib2.txt).

Options for the output of the localizer:
-h [ --help ]                         Print this message
--outputAlembic arg (=trackedcameras.abc)
                                        Filename for the SfMData export file
                                        (where camera poses will be stored).
                                        Default : trackedcameras.abc.

Common optional parameters for the localizer:
--descriptorPath arg                  Folder containing the .desc.
--matchDescTypes arg (=sift)          The describer types to use for the
                                        matching
--preset arg (=normal)                Preset for the feature extractor when
                                        localizing a new image
                                        {LOW,MEDIUM,NORMAL,HIGH,ULTRA}
--resectionEstimator arg (=acransac)  The type of /* sac framework to use for
                                        resection (acransac, loransac)
--matchingEstimator arg (=acransac)   The type of /* sac framework to use for
                                        matching (acransac, loransac)
--refineIntrinsics arg                Enable/Disable camera intrinsics
                                        refinement for each localized image
--reprojectionError arg (=4)          Maximum reprojection error (in pixels)
                                        allowed for resectioning. If set to 0
                                        it lets the ACRansac select an optimal
                                        value.
--useLocalizeRigNaive arg             Enable/Disable the naive method for rig
                                        localization: naive method tries to
                                        localize each camera separately. This
                                        is enabled by default if the library
                                        has not been built with openGV.
--angularThreshold arg (=0.10000000000000001)
                                        The maximum angular threshold in
                                        degrees between feature bearing vector
                                        and 3D point direction. Used only with
                                        the opengv method.

Parameters specific for the vocabulary tree-based localizer:
--voctree arg                         [voctree] Filename for the vocabulary
                                        tree
--voctreeWeights arg                  [voctree] Filename for the vocabulary
                                        tree weights
--algorithm arg (=AllResults)         [voctree] Algorithm type:
                                        {FirstBest,AllResults}
--nbImageMatch arg (=4)               [voctree] Number of images to retrieve
                                        in the database
--maxResults arg (=10)                [voctree] For algorithm AllResults, it
                                        stops the image matching when this
                                        number of matched images is reached. If
                                        0 it is ignored.
--matchingError arg (=4)              [voctree] Maximum matching error (in
                                        pixels) allowed for image matching with
                                        geometric verification. If set to 0 it
                                        lets the ACRansac select an optimal
                                        value.


aliceVision_texturing
---------------------

Required parameters:
-i [ --input ] arg                    SfMData file.
--inputDenseReconstruction arg        Path to the dense reconstruction (mesh
                                        with per vertex visibility).
-o [ --output ] arg                   Folder for output mesh: OBJ, material
                                        and texture files.

Optional parameters:
--imagesFolder arg                    Use images from a specific folder
                                        instead of those specify in the SfMData
                                        file.
                                        Filename should be the image uid.
--outputTextureFileType arg (=png)    Image file type :
                                        * jpg
                                        * png
                                        * tif
                                        * exr (half)
--textureSide arg (=8192)             Output texture size
--downscale arg (=2)                  Texture downscale factor
--unwrapMethod arg (=Basic)           Method to unwrap input mesh if it does
                                        not have UV coordinates.
                                         * Basic (> 600k faces) fast and
                                        simple. Can generate multiple atlases.
                                         * LSCM (<= 600k faces): optimize
                                        space. Generates one atlas.
                                         * ABF (<= 300k faces): optimize space
                                        and stretch. Generates one atlas.'
--fillHoles arg (=0)                  Fill texture holes with plausible
                                        values.
--padding arg (=15)                   Texture edge padding size in pixel
--inputMesh arg                       Optional input mesh to texture. By
                                        default, it will texture the
                                        inputReconstructionMesh.
--flipNormals arg (=0)                Option to flip face normals. It can be
                                        needed as it depends on the vertices
                                        order in triangles and the convention
                                        change from one software to another.
--maxNbImagesForFusion arg (=3)       Max number of images to combine to
                                        create the final texture.
--bestScoreThreshold arg (=0)         (0.0 to disable filtering based on
                                        threshold to relative best score).
--angleHardThreshold arg (=90)        (0.0 to disable angle hard threshold
                                        filtering).
--forceVisibleByAllVertices arg (=0)  triangle visibility is based on the
                                        union of vertices visiblity.
--visibilityRemappingMethod arg (=PullPush)
                                        Method to remap visibilities from the
                                        reconstruction to the input mesh.
                                         * Pull: For each vertex of the input
                                        mesh, pull the visibilities from the
                                        closest vertex in the reconstruction.
                                         * Push: For each vertex of the
                                        reconstruction, push the visibilities
                                        to the closest triangle in the input
                                        mesh.
                                         * PullPush: Combine results from Pull
                                        and Push results.'

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_utils_frustumFiltering
----------------------------------

.. note::

  Compute camera cones that share some putative visual content.

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output pair filename.

Optional parameters:
--zNear arg (=-1)                  Distance of the near camera plane.
--zFar arg (=-1)                   Distance of the far camera plane.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_utils_keyframeSelection
-----------------------------------

.. note::

  This program is used to extract keyframes from single camera or a camera rig:

Required parameters:
--mediaPaths arg                      Input video files or image sequence
                                        directories.
--sensorDbPath arg                    Camera sensor width database path.
--voctreePath arg                     Vocabulary tree path.
--outputFolder arg                    Output keyframes folder for .jpg

Metadata parameters:
--brands arg (=[])                    Camera brands.
--models arg (=[])                    Camera models.
--mmFocals arg (=[])                  Focals in mm (will be use if not 0).
--pxFocals arg (=[])                  Focals in px (will be use and convert
                                        in mm if not 0).
--frameOffsets arg (=[])              Frame offsets.

Algorithm parameters:
--useSparseDistanceSelection arg (=1) Use sparseDistance selection in order
                                        to avoid similar keyframes
--useSharpnessSelection arg (=1)      Use frame sharpness score for keyframe
                                        selection
--sparseDistMaxScore arg (=100)       Maximum number of strong common points
                                        between two keyframes
--sharpnessPreset arg (=normal)       Preset for sharpnessSelection : {ultra,
                                        high, normal, low, very_low, none}
--sharpSubset arg (=4)                sharp part of the image (1 = all, 2 =
                                        size/2, ...)
--minFrameStep arg (=12)              minimum number of frames between two
                                        keyframes
--maxFrameStep arg (=36)              maximum number of frames after which a
                                        keyframe can be taken
--maxNbOutFrame arg (=0)              maximum number of output frames (0 = no
                                        limit)

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal, error, warning,
                                        info, debug, trace).


aliceVision_utils_qualityEvaluation
-----------------------------------

Required parameters:
-i [ --input ] arg                 SfMData file.
-o [ --output ] arg                Output path for statistics.
--groundTruthPath arg              Path to a ground truth reconstructed scene

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_utils_rigTransform
------------------------------

.. note::

  Program to deduce the pose of the not localized cameras of the RIG.

  Use if you have localized a single camera from an acquisition with a RIG of cameras.

Required parameters:
-i [ --input ] arg                 The input file containing cameras.
-o [ --output ] arg                Filename for the SfMData export file
                                     (where camera poses will be stored).
                                     Alembic file only.
-c [ --calibrationFile ] arg       A calibration file for the target camera.
-e [ --rigFile ] arg               Rig calibration file that will be  applied
                                     to input.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_utils_sfmAlignment
------------------------------

Required parameters:
-i [ --input ] arg                 SfMData file to align.
-o [ --output ] arg                Output SfMData scene.
-r [ --reference ] arg             Path to the scene used as the reference
                                     coordinate system.

Log parameters:
-v [ --verboseLevel ] arg (=info)  verbosity level (fatal,  error, warning,
                                     info, debug, trace).


aliceVision_utils_sfmColorHarmonize
-----------------------------------

Required parameters:
-i [ --input ] arg                   SfMData file.
-o [ --output ] arg                  Output path.
-f [ --featuresFolders ] arg         Path to folder(s) containing the
                                       extracted features.
-m [ --matchesFolders ] arg          Path to folder(s) in which computed
                                       matches are stored.
--referenceImage arg                 Reference image id.
--selectionMethod arg                - 0: FullFrame
                                       - 1: Matched Points
                                       - 2: VLD Segment

Optional parameters:
-d [ --describerTypes ] arg (=sift)  Describer types used to describe an
                                       image:
                                       * sift: Scale-invariant feature
                                       transform.
                                       * sift_float: SIFT stored as float.
                                       * sift_upright: SIFT with upright
                                       feature.
                                       * akaze: A-KAZE with floating point
                                       descriptors.
                                       * akaze_liop: A-KAZE with Local
                                       Intensity Order Pattern descriptors.
                                       * akaze_mldb: A-KAZE with Modified-Local
                                       Difference Binary descriptors.


Log parameters:
-v [ --verboseLevel ] arg (=info)    verbosity level (fatal,  error, warning,
                                       info, debug, trace).


aliceVision_utils_sfmLocalization
---------------------------------

Image localization in an existing SfM reconstruction

Required parameters:
-i [ --input ] arg                   SfMData file.
-o [ --output ] arg                  Output path.
-f [ --featuresFolders ] arg         Path to folder(s) containing the
                                       extracted features.
--queryImage arg                     Path to the image that must be
                                       localized.

Optional parameters:
-d [ --describerTypes ] arg (=sift)  Describer types used to describe an
                                       image:
                                       * sift: Scale-invariant feature
                                       transform.
                                       * sift_float: SIFT stored as float.
                                       * sift_upright: SIFT with upright
                                       feature.
                                       * akaze: A-KAZE with floating point
                                       descriptors.
                                       * akaze_liop: A-KAZE with Local
                                       Intensity Order Pattern descriptors.
                                       * akaze_mldb: A-KAZE with Modified-Local
                                       Difference Binary descriptors.

--maxResidualError arg (=inf)        Upper bound of the residual error
                                       tolerance.

Log parameters:
-v [ --verboseLevel ] arg (=info)    verbosity level (fatal,  error, warning,
                                       info, debug, trace).


aliceVision_utils_sfmTransform
------------------------------

Required parameters:
-i [ --input ] arg                    SfMData file to align.
-o [ --output ] arg                   Output SfMData scene.
--method arg                          Transform method:
                                        - transformation: Apply a given
                                        transformation
                                        - auto_from_cameras: Use cameras
                                        - auto_from_landmarks: Use landmarks


Optional parameters:
--transformation arg                  required only for 'transformation' and
                                        'single camera' methods:
                                        Transformation: Align [X,Y,Z] to
                                        +Y-axis, rotate around Y by R deg,
                                        scale by S; syntax: X,Y,Z;R;S
                                        Single camera: camera UID or image
                                        filename
-d [ --landmarksDescriberTypes ] arg  optional for 'landmarks' method:
                                        Image describer types used to compute
                                        the mean of the point cloud
                                        Use all of them if empty
                                        Describer types used to describe an
                                        image:
                                        * sift: Scale-invariant feature
                                        transform.
                                        * sift_float: SIFT stored as float.
                                        * sift_upright: SIFT with upright
                                        feature.
                                        * akaze: A-KAZE with floating point
                                        descriptors.
                                        * akaze_liop: A-KAZE with Local
                                        Intensity Order Pattern descriptors.
                                        * akaze_mldb: A-KAZE with
                                        Modified-Local Difference Binary
                                        descriptors.

--scale arg (=1)                      Additional scale to apply.

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal,  error,
                                        warning, info, debug, trace).


aliceVision_utils_split360Images
--------------------------------

.. note::

  This program is used to extract multiple images from equirectangular or dualfisheye images or image folder

Required parameters:
-i [ --input ] arg                    Input image file or image folder.
-o [ --output ] arg                   Output keyframes folder for .jpg

Optional parameters:
-m [ --splitMode ] arg (=equirectangular)
                                        Split mode (exif, equirectangular,
                                        dualfisheye)
--dualFisheyeSplitPreset arg (=center)
                                        Dual-Fisheye split type preset (center,
                                        top, bottom)
--equirectangularNbSplits arg (=2)    Equirectangular number of splits
--equirectangularSplitResolution arg (=1200)
                                        Equirectangular split resolution
--equirectangularDemoMode arg (=0)    Export a SVG file that simulate the
                                        split

Log parameters:
-v [ --verboseLevel ] arg (=info)     verbosity level (fatal,  error,
                                        warning, info, debug, trace).


aliceVision_utils_voctreeCreation
=================================

.. note::

  **This program is used to load the sift descriptors from a SfMData file and create a vocabulary tree.**

  **It takes as input either a list.txt file containing the a simple list of images (bundler format and older AliceVision version format) or a sfm_data file (JSON) containing the list of images.**

  **In both cases it is assumed that the .desc to load are in the same folder as the input file**

 Required parameters:
 --------------------

  -i [ --input ] arg
  ------------------

  a SfMData file.

  -w [ --weights ] arg
  --------------------

  Output name for the weight file

  -t [ --tree ] arg
  -----------------

  Output name for the tree file

 Optional parameters:
 --------------------

  -f [ --featuresFolders ] arg
  ----------------------------

  Path to folder(s) containing the extracted features.

  -k arg (=10)
  ------------

  he branching factor of the tree

  -r [ --restart ] arg (=5)
  -------------------------

  Number of times that the k-Mean is launched for each cluster, the best solution is kept

  -L arg (=6)
  -----------

  Number of levels of the tree

  -s [ --sanitycheck ] arg (=1)
  -----------------------------

  Perform a sanity check at the end of the creation of the vocabulary tree. The sanity check is a query to the database with the same documents/images used to train the vocabulary tree

 Log parameters:
 ---------------

  -v [ --verboseLevel ] arg (=info)
  ---------------------------------

  verbosity level (fatal, error, warning, info, debug, trace).

  --tbVerbose arg (=2)
  --------------------

  Tree builder verbosity level, 3 should be just enough, 0 to mute


aliceVision_utils_voctreeQueryUtility
=====================================

.. note::

  **This program is used to create a database with a provided dataset of image descriptors using a trained vocabulary tree.**

  **The database is then queried optionally with another set of images in order to retrieve for each image the set of most similar images in the dataset**

  **If another set of images is not provided, the program will perform a sanity check of the database by querying the database using the same images used to build it.**

  **It takes as input either a *list.txt* file containing the a simple list of images (bundler format and older AliceVision version format) or a *sfm_data file (JSON)* containing the list of images. In both cases it is assumed that the *.desc* to load are in the same folder as the input file**

  **For the vocabulary tree, it takes as input the *input.tree* (and the *input.weight*) file generated by *createVoctree***

  **As a further output option *(--outdir)*, it is possible to specify a folder in which it will create, for each query image (be it a query image of querylist or an image of keylist) it creates a folder with the same name of the image, inside which it creates a list of symbolic links to all the similar images found.**

  **The symbolic link naming convention is *matchNumber.filename*, where *matchNumber* is the relevant position of the image in the list of matches *([0-r])* and filename is its image file (eg image.jpg)**

 Required parameters:
 --------------------

  -i [ --input ] arg
  ------------------

  a SfMData file.

  -t [ --tree ] arg
  -----------------

  Input name for the tree file

  -f [ --featuresFolders ] arg
  ----------------------------

  Path to folder(s) containing the extracted features.

 Optional parameters:
 --------------------

  -w [ --weights ] arg
  --------------------

  Input name for the weight file, if not provided the weights will be computed on the database built with the provided set

  -q [ --querySfmDataFilename ] arg
  ---------------------------------

  Path to the SfMData file to be used for querying the database

  --saveDocumentMap arg
  ---------------------

  A matlab file .m where to save the document map of the created database.

  --outdir arg
  ------------

  Path to the folder in which save the symlinks of the similar images (it will be create if it does not exist)

  -m [ --describerMethod ] arg (=sift)
  ------------------------------------

  method to use to describe an image

  -r [ --results ] arg (=10)
  --------------------------

  The number of matches to retrieve for each image, 0 to retrieve all the images

  --matlab arg (=0)
  -----------------

  It produces an output readable by matlab

  -o [ --outfile ] arg
  --------------------

  Name of the output file

  -n [ --Nmax ] arg (=0)
  ----------------------

  Number of features extracted from the .feat files

  -d [ --distance ] arg (=strongCommonPoints)
  -------------------------------------------

  Distance used

 Log parameters:
 ---------------

  -v [ --verboseLevel ] arg (=info)
  ---------------------------------

  verbosity level (fatal, error, warning, info, debug, trace).


aliceVision_utils_voctreeStatistics
===================================

.. note::

  **This program is used to create a database with a provided dataset of image descriptors using a trained vocabulary tree.**

  **The database is then queried with the same images in order to retrieve for each image the set of most similar images in the dataset.**

 Required parameters:
 --------------------

  -i [ --input ] arg
  ------------------

  a SfMData file.

  -t [ --tree ] arg
  -----------------

  Input name for the tree file

 Optional parameters:
 --------------------

  -w [ --weights ] arg
  --------------------

  Input name for the weight file, if not provided the weights will be computed on the database built with the provided set

  -f [ --featuresFolders ] arg
  ----------------------------

  Path to folder(s) containing the extracted features.

  -q [ --querySfmDataFilename ] arg
  ---------------------------------

  Path to the SfMData file to be used for querying the database

  -d [ --distance ] arg
  ---------------------

  Method used to compute distance between histograms:

  -classic: eucledian distance

  -commonPoints: counts common points between histograms

  -strongCommonPoints: counts common 1 values

  -weightedStrongCommonPoints: strongCommonPoints with weights

  -inversedWeightedCommonPoints: strongCommonPoints with inverted weights

 Log parameters:
 ---------------

  -v [ --verboseLevel ] arg (=info)
  ---------------------------------

  verbosity level (fatal, error, warning, info, debug, trace).
